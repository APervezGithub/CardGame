import processing.sound.*;
String page;
int t = 1;
int turn;
PImage slommImage;
PImage flammImage;
PImage sglowImage;
PImage aglowImage;
PImage boardImage;
PImage menuImage;
PImage cancelB;
PImage endTB;
String state = "none";
button cancel;
button endT;
card slomm1;
card flamm1;
card slomm2;
card flamm2;
board gameBoard;
position pos1;
card slomm3;
card slomm4;
card slomm5;
card slomm6;
card selectedCard;
String selection = "self";
card noCard;
minion selectedMinion;
minion noMinion;
menu moveMenu;
ArrayList<button> buttons = new ArrayList<button>();
ArrayList<card> hand1a = new ArrayList<card>();
ArrayList<card> hand1b = new ArrayList<card>();
ArrayList<card> hand2a = new ArrayList<card>();
ArrayList<card> hand2b = new ArrayList<card>();
ArrayList<position> positions = new ArrayList<position>();
ArrayList<minion> minions = new ArrayList<minion>();
//SoundFile test;


void setup()
{
  size(600, 700);
  page = "game";
  turn = 1;
  slommImage = loadImage("slomm.png");
  flammImage = loadImage("flamm.png");
  sglowImage = loadImage("selectGlow.png");
  aglowImage = loadImage("availableGlow.png");
  boardImage = loadImage("board.jpg");
  menuImage = loadImage("menuImage.png");
  cancelB = loadImage("cancel.png");
  endTB = loadImage("endT.png");
  slomm1 = new card("slomm", 10, slommImage, 110, 645, 60, 90, 180, 270, 1);
  flamm1 = new card("flamm", 8, flammImage, 183, 645, 60, 90, 180, 270, 1);
  slomm2 = new card("slomm", 10, slommImage, 110, 65, 60, 90, 180, 270, 2);
  flamm2 = new card("flamm", 8, flammImage, 183, 65, 60, 90, 180, 270, 2);
  noCard = new card("null", 0, boardImage, 0, 0, 0, 0, 0, 0, 0);
  noMinion = new minion("null", 0, boardImage, 0, 0, 0, 0, 0);
  selectedCard = noCard;
  for (int i = 1; i <= 6; i ++)
  {
    if (i <= 3)
    {
      positions.add(new position(150 + (i-1) * 110, 390, i, 1));
    } else
    {
      positions.add(new position(150 + (i-4) * 110, 220, i, 2));
    }
  }
  for (int i = 1; i <= 6; i ++)
  {
    if (i <= 3)
    {
      buttons.add(new button(75, 10 + (i - 1) * 40, 155, 30, i));
    } else
    {
      buttons.add(new button(245, 10 + (i - 4) * 40, 155, 30, i));
    }
  }
  gameBoard = new board();
  moveMenu = new menu(200, 0, 500, 120, buttons);
  //slomm3 = new card("slomm", 10, slommImage, 265, 650, 60, 90, 180, 270);
  //slomm4 = new card("slomm", 10, slommImage, 335, 650, 60, 90, 180, 270);
  //slomm5 = new card("slomm", 10, slommImage, 405, 650, 60, 90, 180, 270);
  //slomm6 = new card("slomm", 10, slommImage, 475, 650, 60, 90, 180, 270);
  hand1a.add(slomm1);
  hand1a.add(flamm1);
  hand2a.add(slomm2);
  hand2a.add(flamm2);
  //hand1.add(slomm3);
  //hand1.add(slomm4);
  //hand1.add(slomm5);
  //hand1.add(slomm6);
  hand1b.add(slomm1);
  hand1b.add(flamm1);
  hand2b.add(slomm2);
  hand2b.add(flamm2);
  //hand2.add(slomm3);
  //hand2.add(slomm4);
  //hand2.add(slomm5);
  //hand2.add(slomm6);
  //test = new SoundFile (this, "testSound.mp3");
}
void draw() {
  if (page == "menu")
  {
    background(255, 255, 255);
    fill(0);
    text("Click to start", 200, 200);
    if (mousePressed)
    {
      page = "game";
    }
  }
  if (page == "game")
  {
    background(255, 255, 255);
    turn = 2 - (t % 2);
    println(state, turn);
    gameBoard.display(boardImage);
    moveMenu.display(menuImage);
    image(cancelB, 0, 0, 75, 30);
    image(endTB, 525, 670, 75, 30);
    //println(mouseX, mouseY);
    stroke(0);
    for (int i = 0; i < positions.size(); i ++)
    {
      position currentPosition = positions.get(i);
      if (state == "card selected")
      {
        if (currentPosition.select() && selectedCard != noCard && currentPosition.hasCard == false && currentPosition.p == turn)
        {
          if(currentPosition.p == selectedCard.p)
          {
            currentPosition.addCard(selectedCard, selectedCard.p);
            minions.get(minions.size() - 1).generateMoveset();
            minions.get(minions.size() - 1).selected = false;
            selectedMinion = noMinion;
            for (int j = 0; j < hand1a.size(); j ++)
            {
              card currentCard = hand1a.get(j);
              currentCard.selected = false;
            }
            for (int j = 0; j < hand2a.size(); j ++)
            {
              card currentCard = hand2a.get(j);
              currentCard.selected = false;
            }
            selectedCard = noCard;
            currentPosition.hasCard = true;
            mousePressed = false;
            state = "none";
          }
        }
      }
    }
    int minionSelected = 0;
    for (int i = 0; i < minions.size(); i ++)
    {
      minion currentMinion = minions.get(i);
      currentMinion.display();
      if (state == "none")
      {
        currentMinion.select(true, moveMenu);
      }
      if (currentMinion.selected == true)
      {
        if (!(state == "targeting"))
        {
          state = "minion selected";
        }
        minionSelected += 1;
        selectedMinion = currentMinion;
        for (int j = 0; j < buttons.size(); j ++)
        {
          button currentButton = buttons.get(j);
          currentButton.name = currentMinion.actions.get(j);
          currentButton.action = currentMinion.actionNs.get(j);
          if (currentButton.beClicked(moveMenu.x))
          {
            if (!currentMinion.seekTarget(currentButton.action))
            {
              state = "none";
              if(currentButton.action == 5 || currentButton.action == 6)
              {
                for(int k = 0; k < minions.size(); k ++)
                {
                  minion currentTMinion = minions.get(k); 
                  if(currentTMinion.p != currentMinion.p)
                  {
                    if(currentMinion.targetM1 == noMinion)
                    {
                      currentMinion.targetM1 = currentTMinion;
                    } else if (currentMinion.targetM2 == noMinion)
                    {
                      currentMinion.targetM2 = currentTMinion;
                    } else if (currentMinion.targetM3 == noMinion)
                    {
                      currentMinion.targetM3 = currentTMinion;
                    }
                  }
                }
              }
              currentMinion.move(currentButton.action);
              currentMinion.targetM1 = noMinion;
              currentMinion.targetM2 = noMinion;
              currentMinion.targetM3 = noMinion;
              currentMinion.selected = false;
              selectedMinion = noMinion;
            } else
            {
              state = "targeting";
            }
          }
          //currentMinion.move();
        }
        if (state == "targeting")
        {
          currentMinion.target(positions, minions);
          if (currentMinion.targetM1 != noMinion)
          {
            currentMinion.move(currentMinion.moveN);
            currentMinion.targetM1 = noMinion;
            currentMinion.selected = false;
            selectedMinion = noMinion;
            state = "none";
            mousePressed = false;
          }
        }
      }
    }
    if (state == "minion selected")
    {
      moveMenu.open();
    }
    if (state == "none")
    {
      moveMenu.unopen();
    }
    if (minionSelected == 0)
    {
      selectedMinion = noMinion;
    }
    int cardSelected = 0;
    for (int i = 0; i < hand2a.size(); i ++)
    {
      card currentCard = hand2a.get(i);
      card replacementCard = hand2b.get(i);
      currentCard.display();
      currentCard.zoom();
      if (state == "none" && turn == 2)
      {
        currentCard.select();
      }
      if (currentCard.selected == true)
      {
        state = "card selected";
      }
      currentCard.action();
      if (currentCard.selected == true)
      {
        cardSelected += 1;
        selectedCard = currentCard;
      }
      if (currentCard.hover() && i < hand2a.size() - 1)
      {
        hand2a.remove(i);
        hand2a.add(replacementCard);
        hand2b.remove(i);
        hand2b.add(hand2a.get(hand2a.size() - 1));
      }
    }
    for (int i = 0; i < hand1a.size(); i ++)
    {
      card currentCard = hand1a.get(i);
      card replacementCard = hand1b.get(i);
      currentCard.display();
      currentCard.zoom();
      if (state == "none" && turn == 1)
      {
        currentCard.select();
      }
      if (currentCard.selected == true)
      {
        state = "card selected";
      }
      currentCard.action();
      if (currentCard.selected == true)
      {
        cardSelected += 1;
        selectedCard = currentCard;
      }
      if (currentCard.hover() && i < hand1a.size() - 1)
      {
        hand1a.remove(i);
        hand1a.add(replacementCard);
        hand1b.remove(i);
        hand1b.add(hand1a.get(hand1a.size() - 1));
      }
    }
    if (cardSelected == 0)
    {
      selectedCard = noCard;
    }
    if (mousePressed && mouseX < 75 && mouseY < 30)
    {
      state = "none";
      selectedCard = noCard;
      selectedMinion = noMinion;
      for (int i = 0; i < hand1a.size(); i ++)
      {
        card currentCard = hand1a.get(i);
        currentCard.selected = false;
      }
      for (int i = 0; i < hand2a.size(); i ++)
      {
        card currentCard = hand2a.get(i);
        currentCard.selected = false;
      }
      for (int i = 0; i < minions.size(); i ++)
      {
        minion currentMinion = minions.get(i);
        currentMinion.selected = false;
      }
      mousePressed = false;
    }
    if (mousePressed && mouseX > 525 && mouseY > 670)
    {
      state = "none";
      selectedCard = noCard;
      selectedMinion = noMinion;
      for (int i = 0; i < hand1a.size(); i ++)
      {
        card currentCard = hand1a.get(i);
        currentCard.selected = false;
      }
      for (int i = 0; i < hand2a.size(); i ++)
      {
        card currentCard = hand2a.get(i);
        currentCard.selected = false;
      }
      for (int i = 0; i < minions.size(); i ++)
      {
        minion currentMinion = minions.get(i);
        currentMinion.selected = false;
        if(currentMinion.p)
        {
          
        }
      }
      t += 1;
      mousePressed = false;
    }
  }
}
